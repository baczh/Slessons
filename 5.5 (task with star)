
# Напишите функцию to_roman, которая преобразуют арабское число (val) в римское (roman_str).
#
# Современные римские цифры записываются, выражая каждую цифру отдельно,
# начиная с самой левой цифры и пропуская цифру со значением нуля.
# Римскими цифрами 1990 отображается: 1000=М, 900=СМ, 90=ХС; в результате MCMXC.
# 2023 записывается как 2000=MM, 20=XX, 3=III; или MMXXIII.
# В 1666 используется каждый римский символ в порядке убывания: MDCLXVI.
#
# Например (Ввод --> Вывод) :
# 2008 --> MMVIII


def to_roman(val):
    digit_symbol = {1: 'I', 5: 'V', 10: 'X', 50: 'L', 100: 'C', 500: 'D', 1000: 'M'}
    digit_list = [val // 1000, val % 1000 // 100, val % 100 // 10, val % 10]
    roman_str = ''
    k = 4
    for number in digit_list:
        k = k - 1
        while 0 < number:
            if number <= 3:
                roman_str = roman_str + digit_symbol.get(1 * (10 ** k))
                number = number - 1
            if number == 4:
                roman_str = roman_str + digit_symbol.get(1 * (10 ** k)) + digit_symbol.get(5 * (10 ** k))
                number = number - 4
            if 4 < number < 9:
                roman_str = roman_str + digit_symbol.get(5 * (10 ** k))
                number = number - 5
            if number == 9:
                roman_str = roman_str + digit_symbol.get(1 * (10 ** k)) + digit_symbol.get(1 * (10 ** (k + 1)))
                number = number - 9

    return roman_str

# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [1133, 2224, 1938, 1817, 2505, 391, 3743, 1634, 699, 1666, 1494, 1444]

test_data = [
    "MCXXXIII", "MMCCXXIV", "MCMXXXVIII", "MDCCCXVII", "MMDV", "CCCXCI", 'MMMDCCXLIII', 'MDCXXXIV', 'DCXCIX', 'MDCLXVI',
    'MCDXCIV', 'MCDXLIV']


for i, d in enumerate(data):
    assert to_roman(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')
